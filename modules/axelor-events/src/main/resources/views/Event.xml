<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_6.1.xsd">


    <grid title="Events" name="events-event-grid" model="com.axelor.apps.events.db.Event">

        <button name="start" onClick="save,action-event-method-start-event,save" help="Start" icon="fa-solid fa-play"
                readonlyIf="status == 1 || status == 2 || status == 3"/>
        <button name="end" onClick="save,action-event-method-end-event" help="End" icon="fa-solid fa-check"
                readonlyIf="status == 0 || status == 2 || status == 3 || status == 4"/>
        <button name="postpone" onClick="action-event-method-postpone-event,save" help="Postpone"
                icon="fa-solid fa-pause"
                readonlyIf="status == 0 || status == 2 || status == 3 || status == 4"/>
        <button name="cancelBut" onClick="action-event-method-cancel-event,save" help="Cancel"
                icon="fa-solid fa-ban"
                readonlyIf="status == 0 || status == 2 || status == 3"/>

        <field name="subject"/>
        <field name="startDate"/>
        <field name="endDate"/>
        <field name="duration" widget="duration"/>
        <field name="status" widget="NavSelect" selection="events.event.status.select"/>
        <field name="eventUser"/>

    </grid>

    <grid title="Today's Events" name="events-today-event-grid" model="com.axelor.apps.events.db.Event">
        <!--        <hilite if="status == 1 &amp;&amp; deadlineDate != null &amp;&amp; deadlineDate &lt;= 'eval:__datetime__'" background="red"/>-->
        <hilite if="status == 1 &amp;&amp; $moment(deadlineDate).diff(todayDateTime) &lt; 0" background="red"/>
        <hilite if="status == 2" background="green"/>

        <button name="start" onClick="save,action-event-method-start-event,save" help="Start" icon="fa-solid fa-play"
                readonlyIf="status == 1 || status == 2 || status == 3"/>
        <button name="end" onClick="save,action-event-method-end-event" help="End" icon="fa-solid fa-check"
                readonlyIf="status == 0 || status == 2 || status == 3 || status == 4"/>
        <button name="postpone" onClick="action-event-method-postpone-event,save" help="Postpone"
                icon="fa-solid fa-pause"
                readonlyIf="status == 0 || status == 2 || status == 3 || status == 4"/>
        <button name="cancelBut" onClick="action-event-method-cancel-event,save" help="Cancel"
                icon="fa-solid fa-ban"
                readonlyIf="status == 0 || status == 2 || status == 3"/>

        <field name="subject"/>
        <field name="startDate"/>
        <field name="endDate"/>
        <field name="duration" widget="duration"/>
        <field name="status" widget="NavSelect" selection="events.event.status.select"/>
        <field name="deadlineDate"/>
        <field name="eventUser"/>
    </grid>

    <grid title="My Events of the Day" name="events-my-event-of-the-day-grid" model="com.axelor.apps.events.db.Event">
        <!--        <hilite if="status == 1 &amp;&amp; deadlineDate != null &amp;&amp; deadlineDate &lt;= 'eval:__datetime__'" background="red"/>-->
        <hilite if="status == 1 &amp;&amp; $moment(deadlineDate).diff(todayDateTime) &lt; 0" background="red"/>
        <hilite if="status == 2" background="green"/>
        <field name="eventUser" hidden="true"/>
        <button name="start" onClick="save,action-event-method-start-event,save" help="Start" icon="fa-solid fa-play"
                readonlyIf="status == 1 || status == 2 || status == 3"/>
        <button name="end" onClick="save,action-event-method-end-event" help="End" icon="fa-solid fa-check"
                readonlyIf="status == 0 || status == 2 || status == 3 || status == 4"/>
        <button name="postpone" onClick="action-event-method-postpone-event,save" help="Postpone"
                icon="fa-solid fa-pause"
                readonlyIf="status == 0 || status == 2 || status == 3 || status == 4"/>
        <button name="cancelBut" onClick="action-event-method-cancel-event,save" help="Cancel"
                icon="fa-solid fa-ban"
                readonlyIf="status == 0 || status == 2 || status == 3"/>

        <field name="subject"/>
        <field name="startDate"/>
        <field name="endDate"/>
        <field name="duration" widget="duration"/>
        <field name="status" widget="NavSelect" selection="events.event.status.select"/>
        <field name="deadlineDate"/>
        <field name="eventUser"/>
    </grid>

    <form title="Events" name="events-event-form" model="com.axelor.apps.events.db.Event"
          onNew="action-event-method-set-default-value">
        <toolbar>
            <button name="start" onClick="save,action-event-method-start-event,action-method-event-set-associated-to,save" help="Start"
                    icon="fa-solid fa-play"
                    readonlyIf="status == 1 || status == 2 || status == 3"/>
            <button name="end" onClick="save,action-event-method-end-event" help="End" icon="fa-solid fa-check"
                    readonlyIf="status == 0 || status == 2 || status == 3 || status == 4"/>
            <button name="postpone" onClick="action-event-method-postpone-event,save" help="Postpone"
                    icon="fa-solid fa-pause"
                    readonlyIf="status == 0 || status == 2 || status == 3 || status == 4"/>
            <button name="cancelBut" onClick="action-event-method-cancel-event,save" help="Cancel"
                    icon="fa-solid fa-ban"
                    readonlyIf="status == 0 || status == 2 || status == 3"/>
        </toolbar>

        <!--        <menubar>-->
        <!--            <menu name="eventToolsMenu" title="Event Status Tools" icon="fa-wrench" showTitle="true">-->
        <!--                <item name="startEvent" title="Start Event" action="action-event-method-start-event"/>-->
        <!--                <item name="endEvent" title="End Event" action="action-event-method-end-event"/>-->
        <!--                <item name="postponeEvent" title="Postpone Event" action="action-event-method-postpone-event"/>-->
        <!--                <item name="cancelEvent" title="Cancel Event" action="action-event-method-cancel-event"/>-->
        <!--            </menu>-->
        <!--        </menubar>-->

        <panel name="eventsMainPanel" title="Main Panel" showTitle="false">
            <field name="subject" title="Subject" required="true"/>
            <field name="content" title="Content" widget="html"/>
        </panel>
        <panel name="eventsSidePanel" title="Side Panel" showTitle="false" sidebar="true">
            <field name="startDate" validIf="associatedToSelect != null" help="Please set Associated to first" onChange="action-event-method-change-start-date-on-change"/>
            <field name="endDate" onChange="action-event-method-change-end-date-on-change"
                   readonlyIf="startDate == null" validIf="endDate == null || endDate &gt;= startDate"/>
            <field name="duration" widget="duration" readonly="true"/>
            <field name="status" widget="NavSelect" selection="events.event.status.select" readonly="true"/>
            <field name="eventUser" title="Assigned to" grid-view="user-grid" form-view="user-form" required="true"/>
            <field name="deadlineDate" required="true"/>
            <field name="associatedToSelect" required="true" readonlyIf="startDate != null"
                   selection="events.event.related.to.select" widget="RefSelect" x-related="associatedToSelectId"
                   />
            <field name="associatedToSelectId" hidden="true"/>
        </panel>
    </form>

    <calendar title="Event Calendar" name="event-calendar-color-by-status" model="com.axelor.apps.events.db.Event"
              eventStart="startDate" eventStop="endDate" colorBy="status">
        <field name="subject"/>
    </calendar>

    <action-method name="action-event-method-set-default-value">
        <call class="com.axelor.apps.events.web.EventController" method="setDefaultValue"/>
    </action-method>

    <action-method name="action-event-method-start-event">
        <call class="com.axelor.apps.events.web.EventController" method="startEvent"/>
    </action-method>

    <action-method name="action-event-method-end-event">
        <call class="com.axelor.apps.events.web.EventController" method="endEvent"/>
    </action-method>

    <action-method name="action-event-method-postpone-event">
        <call class="com.axelor.apps.events.web.EventController" method="postponeEvent"/>
    </action-method>

    <action-method name="action-event-method-cancel-event">
        <call class="com.axelor.apps.events.web.EventController" method="cancelEvent"/>
    </action-method>

    <action-method name="action-event-method-change-start-date-on-change">
        <call class="com.axelor.apps.events.web.EventController" method="startDateOnChange"/>
    </action-method>

    <action-method name="action-event-method-change-end-date-on-change">
        <call class="com.axelor.apps.events.web.EventController" method="endDateOnChange"/>
    </action-method>

    <action-method name="action-method-event-set-associated-to">
        <call class="com.axelor.apps.events.web.EventController" method="setAssociatedTo"/>
    </action-method>


</object-views>